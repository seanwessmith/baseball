## SELECT Players FROM mASter databASe and connect to dk.csv || 263 Pitchers should be total
SELECT players.player_id FROM bASeball_1461521597, players WHERE players.player_name = bASeball_1461521597.name GROUP BY players.player_id

## SELECT Players not in mASter databASe but in dk.csv
SELECT a.* FROM dk_main a LEFT JOIN players b on a.name = b.player_name WHERE b.player_name IS NULL AND a.position like '%P%'


                                             *********Real_total Points*********

## SELECT real total points for each Pitcher
UPDATE `pitcher_stats` JOIN players on players.player_id = pitcher_stats.player_id SET `total_score`= ((`innings_pitched`*2.25)+(`strikeouts`*2)+(`win_result`*4)+(`earned_runs`*-2)+(`hits`*-.6)+(`walks`*-.6)) WHERE players.position like '%P%'

## SELECT real total points for each non-pitcher
UPDATE `pitcher_stats` JOIN players on players.player_id = pitcher_stats.player_id  SET `total_score`= (((`hits`-`double_hit`-`triple_hit`)*3)+(`double_hit`*5)+(`triple_hit`*8)+(`home_runs`*10)+(`rbi`*2.25)+(`runs`*2.25)+(`walks`*2)+(`rbi`*2.25)+(`stolen_bases`*5)) WHERE players.position NOT LIKE '%P%'

## SELECT average real total points for all players
SELECT player_name, position, round(a.total_sum/a.game_count) AS average_total_points FROM players, (SELECT COUNT(*) AS game_count, player_id, SUM(total_score) AS total_sum FROM pitcher_stats GROUP BY player_id) a WHERE players.player_id = a.player_id

## Select average total points for pitcher verse opponent
SELECT ((sum(total_score))/count(*)) as average_point, sum(total_score) AS points, count(*) as game_count, opponent FROM players, pitcher_stats WHERE players.player_id = pitcher_stats.player_id AND position LIKE '%P%' GROUP BY pitcher_stats.opponent ORDER BY `average_point` DESC

                                             ************************************


## SELECT points, salary, total_points FROM all tables
SELECT sum(total_score), player_name, dk_detail.salary, dk_detail.points FROM players, pitcher_stats, dk_detail, dk_main WHERE players.player_id = pitcher_stats.player_id AND dk_detail.player_id = dk_main.player_id AND dk_main.name = players.player_name GROUP BY player_name ORDER BY `dk_detail`.`salary`  DESC

## SELECT average points FROM dk_csv
SELECT name, points, dk_main.player_id,  (sum(points) / count(*)) AS average_points, (MAX(points) - MIN(points)) AS points_differance FROM dk_detail, dk_main WHERE dk_main.player_id = dk_detail.player_id GROUP BY dk_detail.player_id ORDER BY `points_differance`  DESC

## SELECT duplicate pitcher_stats
SELECT player_id, game_date, count(*) FROM `pitcher_stats` GROUP BY game_date, player_id ORDER BY count(*) DESC

## SELECT total points per team FROM pitcher_stats
SELECT sum(total_score), player_name, position, team FROM pitcher_stats, players WHERE players.player_id = pitcher_stats.player_id GROUP BY players.player_id ORDER BY team

## SELECT total points per team FROM dk_detail
SELECT (a.points/count(*)) AS avg_sum ,count(*) AS player_count, sum(a.points) AS point_sum, a.team FROM (SELECT sum(points) AS points, team FROM dk_detail, dk_main WHERE dk_detail.player_id = dk_main.player_id AND position NOT LIKE '%P%'  GROUP BY dk_main.player_id) a GROUP BY team ORDER BY `avg_sum`  DESC

                                             *********DELETION STATEMENTS*********

## Remove duplicate players
DELETE players.* from players left join (select max(player_name), player_id from players group by player_name) a on a.player_id = players.player_id WHERE a.player_id is NULL

## Remove duplicate FROM pitcher_stats
DELETE pitcher_stats.* FROM `pitcher_stats` left join (SELECT max(pitcher_id) AS pitcher_id FROM pitcher_stats GROUP BY game_date, player_id) a ON a.pitcher_id = pitcher_stats.pitcher_id WHERE a.pitcher_id IS NULL
